Description: Fix typos in slangfun.txt
Bug-Origin: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=731126
Forwarded: no
Last-Updated: 2013-12-07

Index: slang2-2.2.4/doc/text/slangfun.txt
===================================================================
--- slang2-2.2.4.orig/doc/text/slangfun.txt	2011-04-11 03:37:07.000000000 +0100
+++ slang2-2.2.4/doc/text/slangfun.txt	2013-12-07 21:03:37.000000000 +0000
@@ -344,8 +344,8 @@
   A stable sorting algorithm is one that preserves the order of equal
   elements. Merge-sort is an inherently stable algorithm, whereas
   quick-sort is not. Nevertheless, the slang library ensures the
-  stability of the results because it uses the indices themeselves as
-  tie-breakers.  As a result, the following two statments may not
+  stability of the results because it uses the indices themselves as
+  tie-breakers.  As a result, the following two statements may not
   produce the same results:
 
      i = array_sort (a; dir=-1);
@@ -2437,7 +2437,7 @@
  DESCRIPTION
  This function may be used to change the last access (actime) and last
  modification (modtime) times associated with the specified file.  If
- sucessful, the function returns 0; otherwise it returns -1 and sets
+ successful, the function returns 0; otherwise it returns -1 and sets
  `errno' accordingly.
 
  NOTES
@@ -3745,7 +3745,7 @@
  EXAMPLE
   A vector in Euclidean 3 dimensional space may be represented by an
   array of three values representing the components of the vector in
-  some orthogonal cartesian coordinate system.  Then the length of the
+  some orthogonal Cartesian coordinate system.  Then the length of the
   vector may be computed using the `hypot' function, e.g.,
 
       A = [2,3,4];
@@ -3902,7 +3902,7 @@
 
  DESCRIPTION
   The `_max' function returns a floating point number equal to
-  the maximum value of its arguments.  If any of the argiments are
+  the maximum value of its arguments.  If any of the arguments are
   arrays (of equal length), an array of the corresponding values will
   be returned.
 
@@ -5005,7 +5005,7 @@
 
  DESCRIPTION
     This functions adds string `s' to the environment.  Typically,
-    `s' should of the form `"name=value"'.  The function
+    `s' should have the form `"name=value"'.  The function
     throws an `OSError' upon failure.
 
  NOTES
@@ -7995,7 +7995,7 @@
     -         Use left-justification
     #         Use alternate form for formatting.
     0         Use 0 padding
-    +         Preceed a number by a plus or minus sign.
+    +         Precede a number by a plus or minus sign.
     (space)   Use a blank instead of a plus sign.
 
 
@@ -8402,7 +8402,7 @@
   match regular expression specified by `pat'.  This function
   performs the match starting at the first byte of the string.  The
   optional `pos' argument may be used to specify a different byte
-  offse (numbered from 1).  This function returns the position in
+  offset (numbered from 1).  This function returns the position in
   bytes (numbered from 1) of the start of the match in `str'.
   The exact substring matched may be found using
   `string_match_nth'.
@@ -8754,7 +8754,7 @@
   This function skips over a range of bytes in a string `str'.
   The byte range to be skipped is specified by the `range'
   parameter.  Optional start (`n0') and stop (`nmax')
-  (0-based) parameters may be used to specifiy the part of the input
+  (0-based) parameters may be used to specify the part of the input
   string to be processed.  The function returns a 0-based offset from
   the beginning of the string where processing stopped.
 
@@ -9211,7 +9211,7 @@
   returned as well as the new string resulting from the replacement.
 
  NOTES
-  This function has been superceded by `strreplace'.  It should no
+  This function has been superseded by `strreplace'.  It should no
   longer be used.
 
  SEE ALSO
